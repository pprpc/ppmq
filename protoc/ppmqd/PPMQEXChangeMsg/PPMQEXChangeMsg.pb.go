// Code generated by protoc-gen-go. DO NOT EDIT.
// source: PPMQEXChangeMsg.proto

package PPMQEXChangeMsg

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Reqest
type Req struct {
	// 验证字符串(服务器之间的通讯先用固定的.)
	SignKey string `protobuf:"bytes,1,opt,name=sign_key,json=signKey,proto3" json:"sign_key"`
	// 接收服务器Id
	ServerId string `protobuf:"bytes,2,opt,name=server_id,json=serverId,proto3" json:"server_id"`
	// 消息要发送到的客户端Id;
	ClientId []string `protobuf:"bytes,3,rep,name=client_id,json=clientId,proto3" json:"client_id"`
	// 这是需要发送给 client_id的 Marshal(PPMQPublish.Req) 的Byte 数组
	Payload              []byte   `protobuf:"bytes,4,opt,name=payload,proto3" json:"payload"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Req) Reset()         { *m = Req{} }
func (m *Req) String() string { return proto.CompactTextString(m) }
func (*Req) ProtoMessage()    {}
func (*Req) Descriptor() ([]byte, []int) {
	return fileDescriptor_00e05f781f9b150b, []int{0}
}

func (m *Req) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Req.Unmarshal(m, b)
}
func (m *Req) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Req.Marshal(b, m, deterministic)
}
func (m *Req) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Req.Merge(m, src)
}
func (m *Req) XXX_Size() int {
	return xxx_messageInfo_Req.Size(m)
}
func (m *Req) XXX_DiscardUnknown() {
	xxx_messageInfo_Req.DiscardUnknown(m)
}

var xxx_messageInfo_Req proto.InternalMessageInfo

func (m *Req) GetSignKey() string {
	if m != nil {
		return m.SignKey
	}
	return ""
}

func (m *Req) GetServerId() string {
	if m != nil {
		return m.ServerId
	}
	return ""
}

func (m *Req) GetClientId() []string {
	if m != nil {
		return m.ClientId
	}
	return nil
}

func (m *Req) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

// Response
type Resp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Resp) Reset()         { *m = Resp{} }
func (m *Resp) String() string { return proto.CompactTextString(m) }
func (*Resp) ProtoMessage()    {}
func (*Resp) Descriptor() ([]byte, []int) {
	return fileDescriptor_00e05f781f9b150b, []int{1}
}

func (m *Resp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Resp.Unmarshal(m, b)
}
func (m *Resp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Resp.Marshal(b, m, deterministic)
}
func (m *Resp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Resp.Merge(m, src)
}
func (m *Resp) XXX_Size() int {
	return xxx_messageInfo_Resp.Size(m)
}
func (m *Resp) XXX_DiscardUnknown() {
	xxx_messageInfo_Resp.DiscardUnknown(m)
}

var xxx_messageInfo_Resp proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Req)(nil), "PPMQEXChangeMsg.Req")
	proto.RegisterType((*Resp)(nil), "PPMQEXChangeMsg.Resp")
}

func init() { proto.RegisterFile("PPMQEXChangeMsg.proto", fileDescriptor_00e05f781f9b150b) }

var fileDescriptor_00e05f781f9b150b = []byte{
	// 191 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x0d, 0x08, 0xf0, 0x0d,
	0x74, 0x8d, 0x70, 0xce, 0x48, 0xcc, 0x4b, 0x4f, 0xf5, 0x2d, 0x4e, 0xd7, 0x2b, 0x28, 0xca, 0x2f,
	0xc9, 0x17, 0xe2, 0x47, 0x13, 0x56, 0x2a, 0xe1, 0x62, 0x0e, 0x4a, 0x2d, 0x14, 0x92, 0xe4, 0xe2,
	0x28, 0xce, 0x4c, 0xcf, 0x8b, 0xcf, 0x4e, 0xad, 0x94, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x62,
	0x07, 0xf1, 0xbd, 0x53, 0x2b, 0x85, 0xa4, 0xb9, 0x38, 0x8b, 0x53, 0x8b, 0xca, 0x52, 0x8b, 0xe2,
	0x33, 0x53, 0x24, 0x98, 0xc0, 0x72, 0x1c, 0x10, 0x01, 0xcf, 0x14, 0x90, 0x64, 0x72, 0x4e, 0x66,
	0x6a, 0x5e, 0x09, 0x48, 0x92, 0x59, 0x81, 0x19, 0x24, 0x09, 0x11, 0xf0, 0x4c, 0x11, 0x92, 0xe0,
	0x62, 0x2f, 0x48, 0xac, 0xcc, 0xc9, 0x4f, 0x4c, 0x91, 0x60, 0x51, 0x60, 0xd4, 0xe0, 0x09, 0x82,
	0x71, 0x95, 0xd8, 0xb8, 0x58, 0x82, 0x52, 0x8b, 0x0b, 0x8c, 0xec, 0xb9, 0x58, 0x03, 0x02, 0x82,
	0x0a, 0x92, 0x85, 0xcc, 0xb8, 0x58, 0x03, 0x9c, 0x13, 0x73, 0x72, 0x84, 0x44, 0xf4, 0xd0, 0x1d,
	0x1e, 0x94, 0x5a, 0x28, 0x25, 0x8a, 0x45, 0xb4, 0xb8, 0x40, 0x89, 0x21, 0x89, 0x0d, 0xec, 0x2d,
	0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0xe7, 0x9a, 0x9c, 0x95, 0xef, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PPRpcClient is the client API for PPRpc service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PPRpcClient interface {
	PCall(ctx context.Context, in *Req, opts ...grpc.CallOption) (*Resp, error)
}

type pPRpcClient struct {
	cc *grpc.ClientConn
}

func NewPPRpcClient(cc *grpc.ClientConn) PPRpcClient {
	return &pPRpcClient{cc}
}

func (c *pPRpcClient) PCall(ctx context.Context, in *Req, opts ...grpc.CallOption) (*Resp, error) {
	out := new(Resp)
	err := c.cc.Invoke(ctx, "/PPMQEXChangeMsg.PPRpc/PCall", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PPRpcServer is the server API for PPRpc service.
type PPRpcServer interface {
	PCall(context.Context, *Req) (*Resp, error)
}

func RegisterPPRpcServer(s *grpc.Server, srv PPRpcServer) {
	s.RegisterService(&_PPRpc_serviceDesc, srv)
}

func _PPRpc_PCall_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Req)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PPRpcServer).PCall(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/PPMQEXChangeMsg.PPRpc/PCall",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PPRpcServer).PCall(ctx, req.(*Req))
	}
	return interceptor(ctx, in, info, handler)
}

var _PPRpc_serviceDesc = grpc.ServiceDesc{
	ServiceName: "PPMQEXChangeMsg.PPRpc",
	HandlerType: (*PPRpcServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PCall",
			Handler:    _PPRpc_PCall_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "PPMQEXChangeMsg.proto",
}
